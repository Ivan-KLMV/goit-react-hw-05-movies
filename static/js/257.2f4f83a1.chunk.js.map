{"version":3,"file":"static/js/257.2f4f83a1.chunk.js","mappings":"yPAEaA,EAAqBC,EAAAA,GAAAA,IAAH,oPAkBlBC,EAAoBD,EAAAA,GAAAA,IAAH,mD,SCmF9B,EA5FqB,WAAO,IAAD,IACnBE,GAAWC,EAAAA,EAAAA,MAEjB,GAAkCC,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACXC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAG7CC,EAAAA,EAAAA,YAAU,WASRR,GAAa,GACbS,MAAM,sCAAD,OAAuCR,EAAvC,mBATW,CACdS,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAKHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAC,GAEJjB,EAAaiB,GACbf,GAAa,EACd,IACAiB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GACb,GAAE,CAACjB,IAMJ,OACE,SAAC,IAAD,CAAiBoB,YAAU,EAA3B,SACGtB,GACC,8BAAE,gBAEF,+BACE,UAACR,EAAD,YACE,mBAAQ+B,KAAK,SAASC,QAXZ,WAClB7B,EAASW,EACV,EASS,SAA4C,UAG5C,4BACE,gBAAKmB,IAAG,UA3CR,mCA2CQ,OAAW3B,EAAU4B,aAAeC,IAAI,MAChD,4BACE,0BACG7B,EAAU8B,gBACX,0BACG9B,EAAU+B,cAAV,WACK/B,EAAU+B,aAAaC,MAAM,EAAG,GADrC,WAIL,yBAAG,eAED,oCAAUC,KAAKC,MAA+B,GAAzBlC,EAAUmC,cAA/B,WAEF,wBAAI,cACJ,uBAAInC,EAAUoC,YACd,wBAAI,YACJ,eAAIC,MAAO,CAAEC,QAAS,OAAQC,IAAK,OAAQC,UAAW,QAAtD,SACGxC,EAAUyC,QACTzC,EAAUyC,OAAOC,KAAI,SAAAC,GAAK,OACxB,wBAAoBA,EAAMC,MAAjBD,EAAMvC,GADS,aAMlC,UAACR,EAAD,YACE,wBAAI,4BACJ,2BACE,yBACE,SAAC,KAAD,CAAMiD,GAAG,OAAOpC,MAAO,CAAEC,KAAMJ,EAASG,MAAMC,MAA9C,SAAsD,YAIxD,yBACE,SAAC,KAAD,CAAMmC,GAAG,UAAUpC,MAAO,CAAEC,KAAMJ,EAASG,MAAMC,MAAjD,SAAyD,kBAK7D,SAAC,KAAD,aAOb,C","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieDetailsStyled = styled.div`\n  & button {\n    margin-bottom: 10px;\n  }\n\n  & > div {\n    display: flex;\n    gap: 20px;\n\n    & > img {\n      width: 240px;\n      height: auto;\n      background: lightgray;\n      flex-shrink: 0;\n    }\n  }\n`;\n\nexport const InformationStyled = styled.div`\n  flex-direction: column;\n`;\n","import { ContainerStyled } from 'components/Container.styled';\nimport { useEffect, useState } from 'react';\nimport {\n  Link,\n  useParams,\n  Outlet,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport { MovieDetailsStyled, InformationStyled } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const navigate = useNavigate();\n  const URL = 'https://image.tmdb.org/t/p/w500';\n  const [movieInfo, setMovieInfo] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const { id } = useParams();\n  const location = useLocation();\n  const backwardPath = location.state?.from ?? '/';\n  // console.log(backwardPath);\n\n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzMTI1YzAwN2Q3NzBjMmI2YTk2YTY5NGEyYWIxOWRjZSIsInN1YiI6IjY0NmNkNTE4MmJjZjY3MDE1NTg0Y2I0MyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.1zl0yET6waSnMi-_6LNcanZOg8qB1GH_Q87VGSPFtqc',\n      },\n    };\n    setIsLoading(true);\n    fetch(`https://api.themoviedb.org/3/movie/${id}?language=en-US`, options)\n      .then(response => response.json())\n      .then(response => {\n        // console.log(response);\n        setMovieInfo(response);\n        setIsLoading(false);\n      })\n      .catch(err => console.error(err));\n  }, [id]);\n\n  const backHandler = () => {\n    navigate(backwardPath);\n  };\n\n  return (\n    <ContainerStyled $marginTop>\n      {isLoading ? (\n        <>Loading...</>\n      ) : (\n        <>\n          <MovieDetailsStyled>\n            <button type=\"button\" onClick={backHandler}>\n              back\n            </button>\n            <div>\n              <img src={`${URL}${movieInfo.poster_path}`} alt=\"\" />\n              <div>\n                <h2>\n                  {movieInfo.original_title}\n                  <span>\n                    {movieInfo.release_date &&\n                      `(${movieInfo.release_date.slice(0, 4)})`}\n                  </span>\n                </h2>\n                <p>\n                  user score:\n                  <span>{`${Math.round(movieInfo.vote_average * 10)}%`}</span>\n                </p>\n                <h3>overview</h3>\n                <p>{movieInfo.overview}</p>\n                <h3>genres</h3>\n                <ul style={{ display: 'flex', gap: '10px', listStyle: 'none' }}>\n                  {movieInfo.genres &&\n                    movieInfo.genres.map(genre => (\n                      <li key={genre.id}>{genre.name}</li>\n                    ))}\n                </ul>\n              </div>\n            </div>\n            <InformationStyled>\n              <h3>additional information</h3>\n              <ul>\n                <li>\n                  <Link to=\"cast\" state={{ from: location.state.from }}>\n                    cast\n                  </Link>\n                </li>\n                <li>\n                  <Link to=\"reviews\" state={{ from: location.state.from }}>\n                    reviews\n                  </Link>\n                </li>\n              </ul>\n              <Outlet />\n            </InformationStyled>\n          </MovieDetailsStyled>\n        </>\n      )}\n    </ContainerStyled>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["MovieDetailsStyled","styled","InformationStyled","navigate","useNavigate","useState","movieInfo","setMovieInfo","isLoading","setIsLoading","id","useParams","location","useLocation","backwardPath","state","from","useEffect","fetch","method","headers","accept","Authorization","then","response","json","catch","err","console","error","$marginTop","type","onClick","src","poster_path","alt","original_title","release_date","slice","Math","round","vote_average","overview","style","display","gap","listStyle","genres","map","genre","name","to"],"sourceRoot":""}