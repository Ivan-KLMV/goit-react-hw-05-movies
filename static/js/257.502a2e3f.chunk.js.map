{"version":3,"file":"static/js/257.502a2e3f.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieDetailsStyled = styled.div`\n  & button {\n    margin-bottom: 10px;\n  }\n\n  & > div {\n    display: flex;\n    gap: 20px;\n\n    & > img {\n      width: 240px;\n      height: auto;\n      background: lightgray;\n      flex-shrink: 0;\n    }\n\n    & > div > ul {\n      display: flex;\n      gap: 10px;\n\n      list-style: none;\n    }\n  }\n`;\n\nexport const InformationStyled = styled.div`\n  flex-direction: column;\n`;\n","import { ContainerStyled } from 'components/Container.styled';\nimport { Suspense, useEffect, useState } from 'react';\nimport {\n  Link,\n  useParams,\n  Outlet,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport { MovieDetailsStyled, InformationStyled } from './MovieDetails.styled';\nimport { moviesApi } from 'services/moviesApi';\n\nconst MovieDetails = () => {\n  const navigate = useNavigate();\n  const [movieInfo, setMovieInfo] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const { id } = useParams();\n  const location = useLocation();\n  const backwardPath = location.state?.from ?? '/';\n  const URL = moviesApi.imagUrl;\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    moviesApi\n      .getDetails(id)\n      .then(response => {\n        // console.log(response);\n        setMovieInfo(response);\n        setIsLoading(false);\n      })\n      .catch(err => console.error(err));\n  }, [id]);\n\n  const backHandler = () => {\n    navigate(backwardPath);\n  };\n\n  return (\n    <ContainerStyled $marginTop>\n      {isLoading ? (\n        <>Loading...</>\n      ) : (\n        <>\n          <MovieDetailsStyled>\n            <button type=\"button\" onClick={backHandler}>\n              back\n            </button>\n            <div>\n              <img src={`${URL}${movieInfo.poster_path}`} alt=\"\" />\n              <div>\n                <h2>\n                  {movieInfo.original_title}\n                  <span>\n                    {movieInfo.release_date &&\n                      `(${movieInfo.release_date.slice(0, 4)})`}\n                  </span>\n                </h2>\n                <p>\n                  user score:\n                  <span>{`${Math.round(movieInfo.vote_average * 10)}%`}</span>\n                </p>\n                <h3>overview</h3>\n                <p>{movieInfo.overview}</p>\n                <h3>genres</h3>\n                <ul>\n                  {movieInfo.genres &&\n                    movieInfo.genres.map(genre => (\n                      <li key={genre.id}>{genre.name}</li>\n                    ))}\n                </ul>\n              </div>\n            </div>\n            <InformationStyled>\n              <h3>additional information</h3>\n              <ul>\n                <li>\n                  <Link to=\"cast\" state={{ from: location.state?.from ?? '/' }}>\n                    Cast\n                  </Link>\n                </li>\n                <li>\n                  <Link\n                    to=\"reviews\"\n                    state={{ from: location.state?.from ?? '/' }}\n                  >\n                    Reviews\n                  </Link>\n                </li>\n              </ul>\n              <Suspense fallback={<div>Loading page...</div>}>\n                <Outlet />\n              </Suspense>\n            </InformationStyled>\n          </MovieDetailsStyled>\n        </>\n      )}\n    </ContainerStyled>\n  );\n};\n\nexport default MovieDetails;\n","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzMTI1YzAwN2Q3NzBjMmI2YTk2YTY5NGEyYWIxOWRjZSIsInN1YiI6IjY0NmNkNTE4MmJjZjY3MDE1NTg0Y2I0MyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.1zl0yET6waSnMi-_6LNcanZOg8qB1GH_Q87VGSPFtqc',\n  },\n};\n\nexport const moviesApi = {\n  imagUrl: 'https://image.tmdb.org/t/p/w500',\n\n  getTrending(page) {\n    return fetch(\n      `https://api.themoviedb.org/3/trending/movie/day?language=en-US&page=${page}`,\n      options\n    ).then(response => response.json());\n  },\n\n  getSerch(searchQuery, page) {\n    return fetch(\n      `https://api.themoviedb.org/3/search/movie?query=${searchQuery.get(\n        'query'\n      )}&include_adult=false&language=en-US&page=${page}`,\n      options\n    ).then(response => response.json());\n  },\n\n  getDetails(id) {\n    return fetch(\n      `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n      options\n    ).then(response => response.json());\n  },\n\n  getCast(id) {\n    return fetch(\n      `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\n      options\n    ).then(response => response.json());\n  },\n\n  getReviews(id) {\n    return fetch(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`,\n      options\n    ).then(response => {\n      if (!response.ok) {\n        return { results: [] };\n      }\n      return response.json();\n    });\n  },\n};\n"],"names":["MovieDetailsStyled","styled","InformationStyled","navigate","useNavigate","useState","movieInfo","setMovieInfo","isLoading","setIsLoading","id","useParams","location","useLocation","backwardPath","state","from","URL","moviesApi","useEffect","then","response","catch","err","console","error","$marginTop","type","onClick","src","poster_path","alt","original_title","release_date","slice","Math","round","vote_average","overview","genres","map","genre","name","to","Suspense","fallback","options","method","headers","accept","Authorization","imagUrl","getTrending","page","fetch","json","getSerch","searchQuery","get","getDetails","getCast","getReviews","ok","results"],"sourceRoot":""}