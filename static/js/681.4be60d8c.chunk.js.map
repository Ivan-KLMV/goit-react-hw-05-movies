{"version":3,"file":"static/js/681.4be60d8c.chunk.js","mappings":"qLA0DA,UAvDgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAER,GAAwCH,EAAAA,EAAAA,UAAS,GAAjD,eAAOK,EAAP,KAAqBC,EAArB,KAiCA,OA/BAC,EAAAA,EAAAA,YAAU,WAYRC,MAAM,sCAAD,OACmCL,EADnC,kCAXW,CACdM,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAUHC,MAAK,SAAAC,GACJ,OAAKA,EAASC,GAIPD,EAASE,OAHP,CAAEC,QAAS,GAIrB,IACAJ,MAAK,SAAAC,GAEJZ,EAAWY,EAASG,SACpBX,EAAgBQ,EAASI,cAE1B,IACAC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAM,gBAAiBF,EAAnC,GACb,GAAE,CAACjB,KAEF,yBACGE,EAAe,GACd,wBACGJ,EAAQsB,KAAI,SAAAC,GAAM,OACjB,2BACE,0BAAI,WAASA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOrB,GADC,OAQrB,uBAAG,+CAIV,C","sources":["components/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n  // const [isLoading, setIsLoading] = useState(false);\n  const [totalResults, setTotalResults] = useState(1);\n\n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzMTI1YzAwN2Q3NzBjMmI2YTk2YTY5NGEyYWIxOWRjZSIsInN1YiI6IjY0NmNkNTE4MmJjZjY3MDE1NTg0Y2I0MyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.1zl0yET6waSnMi-_6LNcanZOg8qB1GH_Q87VGSPFtqc',\n      },\n    };\n\n    // setIsLoading(true);\n\n    fetch(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`,\n      options\n    )\n      .then(response => {\n        if (!response.ok) {\n          return { results: [] };\n        }\n        // console.log(response);\n        return response.json();\n      })\n      .then(response => {\n        // console.log(response);\n        setReviews(response.results);\n        setTotalResults(response.total_results);\n        // setIsLoading(false);\n      })\n      .catch(err => console.error('this is error', err));\n  }, [id]);\n  return (\n    <div>\n      {totalResults > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h4>author: {review.author}</h4>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movies</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["useState","reviews","setReviews","id","useParams","totalResults","setTotalResults","useEffect","fetch","method","headers","accept","Authorization","then","response","ok","json","results","total_results","catch","err","console","error","map","review","author","content"],"sourceRoot":""}