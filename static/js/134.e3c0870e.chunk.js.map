{"version":3,"file":"static/js/134.e3c0870e.chunk.js","mappings":"2LAEaA,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KACnC,OACE,+BACE,wBACGD,EAAOE,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMN,GAAhD,SACGE,EAAMK,kBAFFL,EAAME,GADA,OAUxB,C,wGC0DD,UApEe,WACb,OAA0BI,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOT,EAAP,KAAeY,EAAf,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KACA,GAAwBL,EAAAA,EAAAA,UAAS,GAAjC,eAAOM,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,MAEAC,EAAAA,EAAAA,YAAU,WACHF,EAAYG,IAAI,WAGrBT,GAAa,GAEbU,EAAAA,EAAAA,SACYJ,EAAaL,GACtBU,MAAK,SAAAC,GAEJd,EAAUc,EAASC,SACnBb,GAAa,EACd,IACAc,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,IACb,GAAE,CAACd,EAAMK,IAiBV,OACE,UAAC,IAAD,CAAiBY,YAAU,EAA3B,WACE,iBAAMC,SAjBW,SAAAC,GACnBA,EAAEC,iBAEmB,KAAjBzB,EAAM0B,QAIVf,EAAe,CAAEgB,MAAO3B,IACxBM,EAAQ,IAJNsB,MAAM,kBAKT,EAQG,UACE,8BACE,kBACEC,KAAK,OACLC,KAAK,QACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SAdW,SAAAV,GACnBvB,EAASuB,EAAEW,OAAOC,MACnB,EAaSA,MAAOpC,KAET,mBAAQ6B,KAAK,SAAb,UACE,0BAAM,mBAIX1B,GACC,8BAAE,gBAEF,SAAC,IAAD,WACE,SAAC,IAAD,CAAYb,OAAQA,EAAQC,KAAMgB,QAK3C,C,sDCxED,IAAM8B,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIO3B,EAAY,CACvB4B,QAAS,kCAETC,YAHuB,SAGXtC,GACV,OAAOuC,MAAM,uEAAD,OAC6DvC,GACvEgC,GACAtB,MAAK,SAAAC,GAAQ,OAAIA,EAAS6B,MAAb,GAChB,EAEDC,SAVuB,SAUdpC,EAAaL,GACpB,OAAOuC,MAAM,mDAAD,OACyClC,EAAYG,IAC7D,SAFQ,oDAGmCR,GAC7CgC,GACAtB,MAAK,SAAAC,GAAQ,OAAIA,EAAS6B,MAAb,GAChB,EAEDE,WAnBuB,SAmBZpD,GACT,OAAOiD,MAAM,sCAAD,OAC4BjD,EAD5B,mBAEV0C,GACAtB,MAAK,SAAAC,GAAQ,OAAIA,EAAS6B,MAAb,GAChB,EAEDG,QA1BuB,SA0BfrD,GACN,OAAOiD,MAAM,sCAAD,OAC4BjD,EAD5B,2BAEV0C,GACAtB,MAAK,SAAAC,GAAQ,OAAIA,EAAS6B,MAAb,GAChB,EAEDI,WAjCuB,SAiCZtD,GACT,OAAOiD,MAAM,sCAAD,OAC4BjD,EAD5B,kCAEV0C,GACAtB,MAAK,SAAAC,GACL,OAAKA,EAASkC,GAGPlC,EAAS6B,OAFP,CAAE5B,QAAS,GAGrB,GACF,E","sources":["components/MoviesList/MoviesList.jsx","pages/Movies.jsx","services/moviesApi.js"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nexport const MoviesList = ({ movies, path }) => {\n  return (\n    <>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: path }}>\n              {movie.original_title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { ContainerStyled } from 'components/Container.styled';\nimport { moviesApi } from 'services/moviesApi';\n\nconst Movies = () => {\n  const [input, setInput] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const location = useLocation();\n  const [searchQuery, setSearchQuery] = useSearchParams();\n\n  useEffect(() => {\n    if (!searchQuery.get('query')) {\n      return;\n    }\n    setIsLoading(true);\n\n    moviesApi\n      .getSerch(searchQuery, page)\n      .then(response => {\n        // console.log(response);\n        setMovies(response.results);\n        setIsLoading(false);\n      })\n      .catch(err => console.error(err));\n  }, [page, searchQuery]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (input.trim() === '') {\n      alert('Enter a request');\n      return;\n    }\n    setSearchQuery({ query: input });\n    setPage(1);\n  };\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  return (\n    <ContainerStyled $marginTop>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <input\n            type=\"text\"\n            name=\"input\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            onChange={handleChange}\n            value={input}\n          />\n          <button type=\"submit\">\n            <span>Search_</span>\n          </button>\n        </label>\n      </form>\n      {isLoading ? (\n        <>Loading...</>\n      ) : (\n        <ContainerStyled>\n          <MoviesList movies={movies} path={location} />\n        </ContainerStyled>\n      )}\n    </ContainerStyled>\n  );\n};\n\nexport default Movies;\n","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzMTI1YzAwN2Q3NzBjMmI2YTk2YTY5NGEyYWIxOWRjZSIsInN1YiI6IjY0NmNkNTE4MmJjZjY3MDE1NTg0Y2I0MyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.1zl0yET6waSnMi-_6LNcanZOg8qB1GH_Q87VGSPFtqc',\n  },\n};\n\nexport const moviesApi = {\n  imagUrl: 'https://image.tmdb.org/t/p/w500',\n\n  getTrending(page) {\n    return fetch(\n      `https://api.themoviedb.org/3/trending/movie/day?language=en-US&page=${page}`,\n      options\n    ).then(response => response.json());\n  },\n\n  getSerch(searchQuery, page) {\n    return fetch(\n      `https://api.themoviedb.org/3/search/movie?query=${searchQuery.get(\n        'query'\n      )}&include_adult=false&language=en-US&page=${page}`,\n      options\n    ).then(response => response.json());\n  },\n\n  getDetails(id) {\n    return fetch(\n      `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n      options\n    ).then(response => response.json());\n  },\n\n  getCast(id) {\n    return fetch(\n      `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\n      options\n    ).then(response => response.json());\n  },\n\n  getReviews(id) {\n    return fetch(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`,\n      options\n    ).then(response => {\n      if (!response.ok) {\n        return { results: [] };\n      }\n      return response.json();\n    });\n  },\n};\n"],"names":["MoviesList","movies","path","map","movie","to","id","state","from","original_title","useState","input","setInput","setMovies","isLoading","setIsLoading","page","setPage","location","useLocation","useSearchParams","searchQuery","setSearchQuery","useEffect","get","moviesApi","then","response","results","catch","err","console","error","$marginTop","onSubmit","e","preventDefault","trim","query","alert","type","name","autoComplete","autoFocus","placeholder","onChange","target","value","options","method","headers","accept","Authorization","imagUrl","getTrending","fetch","json","getSerch","getDetails","getCast","getReviews","ok"],"sourceRoot":""}