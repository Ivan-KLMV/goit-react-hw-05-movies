{"version":3,"file":"static/js/415.4d2c38d8.chunk.js","mappings":"2LAEaA,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KACnC,OACE,+BACE,wBACGD,EAAOE,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMN,GAAhD,SACGE,EAAMK,kBAFFL,EAAME,GADA,OAUxB,C,gGCsBD,UA/Ba,WACX,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOT,EAAP,KAAeU,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAAeH,EAAAA,EAAAA,UAAS,GAAjBI,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MAejB,OAbAC,EAAAA,EAAAA,YAAU,WACRJ,GAAa,GAEbK,EAAAA,EAAAA,YACeJ,GACZK,MAAK,SAAAC,GAEJT,EAAUS,EAASC,SACnBR,GAAa,EACd,IACAS,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GACb,GAAE,CAACT,KAGF,UAAC,IAAD,YACE,wBAAI,mBACHF,GACC,8BAAE,gBAEF,SAAC,IAAD,CAAYX,OAAQA,EAAQC,KAAMa,MAIzC,C,sDCpCD,IAAMW,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOZ,EAAY,CACvBa,QAAS,kCAETC,YAHuB,SAGXlB,GACV,OAAOmB,MAAM,uEAAD,OAC6DnB,GACvEY,GACAP,MAAK,SAAAC,GAAQ,OAAIA,EAASc,MAAb,GAChB,EAEDC,SAVuB,SAUdC,EAAatB,GACpB,OAAOmB,MAAM,mDAAD,OACyCG,EAAYC,IAC7D,SAFQ,oDAGmCvB,GAC7CY,GACAP,MAAK,SAAAC,GAAQ,OAAIA,EAASc,MAAb,GAChB,EAEDI,WAnBuB,SAmBZhC,GACT,OAAO2B,MAAM,sCAAD,OAC4B3B,EAD5B,mBAEVoB,GACAP,MAAK,SAAAC,GAAQ,OAAIA,EAASc,MAAb,GAChB,EAEDK,QA1BuB,SA0BfjC,GACN,OAAO2B,MAAM,sCAAD,OAC4B3B,EAD5B,2BAEVoB,GACAP,MAAK,SAAAC,GAAQ,OAAIA,EAASc,MAAb,GAChB,EAEDM,WAjCuB,SAiCZlC,GACT,OAAO2B,MAAM,sCAAD,OAC4B3B,EAD5B,kCAEVoB,GACAP,MAAK,SAAAC,GACL,OAAKA,EAASqB,GAGPrB,EAASc,OAFP,CAAEb,QAAS,GAGrB,GACF,E","sources":["components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/moviesApi.js"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nexport const MoviesList = ({ movies, path }) => {\n  return (\n    <>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: path }}>\n              {movie.original_title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useLocation } from 'react-router-dom';\nimport { ContainerStyled } from 'components/Container.styled';\nimport { moviesApi } from 'services/moviesApi';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [page] = useState(1);\n  const location = useLocation();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    moviesApi\n      .getTrending(page)\n      .then(response => {\n        // console.log(response);\n        setMovies(response.results);\n        setIsLoading(false);\n      })\n      .catch(err => console.error(err));\n  }, [page]);\n\n  return (\n    <ContainerStyled>\n      <h1>Trending today</h1>\n      {isLoading ? (\n        <>Loading...</>\n      ) : (\n        <MoviesList movies={movies} path={location} />\n      )}\n    </ContainerStyled>\n  );\n};\n\nexport default Home;\n","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzMTI1YzAwN2Q3NzBjMmI2YTk2YTY5NGEyYWIxOWRjZSIsInN1YiI6IjY0NmNkNTE4MmJjZjY3MDE1NTg0Y2I0MyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.1zl0yET6waSnMi-_6LNcanZOg8qB1GH_Q87VGSPFtqc',\n  },\n};\n\nexport const moviesApi = {\n  imagUrl: 'https://image.tmdb.org/t/p/w500',\n\n  getTrending(page) {\n    return fetch(\n      `https://api.themoviedb.org/3/trending/movie/day?language=en-US&page=${page}`,\n      options\n    ).then(response => response.json());\n  },\n\n  getSerch(searchQuery, page) {\n    return fetch(\n      `https://api.themoviedb.org/3/search/movie?query=${searchQuery.get(\n        'query'\n      )}&include_adult=false&language=en-US&page=${page}`,\n      options\n    ).then(response => response.json());\n  },\n\n  getDetails(id) {\n    return fetch(\n      `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n      options\n    ).then(response => response.json());\n  },\n\n  getCast(id) {\n    return fetch(\n      `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\n      options\n    ).then(response => response.json());\n  },\n\n  getReviews(id) {\n    return fetch(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`,\n      options\n    ).then(response => {\n      if (!response.ok) {\n        return { results: [] };\n      }\n      return response.json();\n    });\n  },\n};\n"],"names":["MoviesList","movies","path","map","movie","to","id","state","from","original_title","useState","setMovies","isLoading","setIsLoading","page","location","useLocation","useEffect","moviesApi","then","response","results","catch","err","console","error","options","method","headers","accept","Authorization","imagUrl","getTrending","fetch","json","getSerch","searchQuery","get","getDetails","getCast","getReviews","ok"],"sourceRoot":""}