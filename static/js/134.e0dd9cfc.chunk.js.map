{"version":3,"file":"static/js/134.e0dd9cfc.chunk.js","mappings":"2LAEaA,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KACnC,OACE,+BACE,wBACGD,EAAOE,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMN,GAAhD,SACGE,EAAMK,kBAFFL,EAAME,GADA,OAUxB,C,+FC6ED,UAxFe,WACb,OAA0BI,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOT,EAAP,KAAeY,EAAf,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KACA,GAAwBL,EAAAA,EAAAA,UAAS,GAAjC,eAAOM,EAAP,KAAaC,EAAb,KAEMC,GAAWC,EAAAA,EAAAA,MACjB,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,MAIAC,EAAAA,EAAAA,YAAU,WAUHF,EAAYG,IAAI,WAIrBT,GAAa,GACbU,MAAM,mDAAD,OACgDJ,EAAYG,IAC7D,SAFC,oDAG0CR,GAjB/B,CACdU,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAeHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAC,GAEJlB,EAAUkB,EAASE,SAEnBlB,GAAa,EACd,IACAmB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,IACb,GAAE,CAACnB,EAAMK,IAkBV,OACE,UAAC,IAAD,CAAiBiB,YAAU,EAA3B,WACE,iBAAMC,SAlBW,SAAAC,GACnBA,EAAEC,iBAEmB,KAAjB9B,EAAM+B,QAIVpB,EAAe,CAAEqB,MAAOhC,IAExBM,EAAQ,IALN2B,MAAM,kBAMT,EAQG,UACE,8BACE,kBACEC,KAAK,OACLC,KAAK,QACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SAdW,SAAAV,GACnB5B,EAAS4B,EAAEW,OAAOC,MACnB,EAaSA,MAAOzC,KAET,mBAAQkC,KAAK,SAAb,UACE,0BAAM,mBAIX/B,GACC,8BAAE,gBAEF,SAAC,IAAD,WACE,SAAC,IAAD,CAAYb,OAAQA,EAAQC,KAAMgB,QAK3C,C","sources":["components/MoviesList/MoviesList.jsx","pages/Movies.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nexport const MoviesList = ({ movies, path }) => {\n  return (\n    <>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: path }}>\n              {movie.original_title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { ContainerStyled } from 'components/Container.styled';\n\nconst Movies = () => {\n  const [input, setInput] = useState('');\n  // const [searchValue, setSearchValue] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  // const [totalPages, setTotalPages] = useState(0);\n  const location = useLocation();\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  // const showButton = totalPages > 1 && page !== totalPages;\n  // console.log('Movies', location.pathname);\n\n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzMTI1YzAwN2Q3NzBjMmI2YTk2YTY5NGEyYWIxOWRjZSIsInN1YiI6IjY0NmNkNTE4MmJjZjY3MDE1NTg0Y2I0MyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.1zl0yET6waSnMi-_6LNcanZOg8qB1GH_Q87VGSPFtqc',\n      },\n    };\n\n    if (!searchQuery.get('query')) {\n      return;\n    }\n\n    setIsLoading(true);\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?query=${searchQuery.get(\n        'query'\n      )}&include_adult=false&language=en-US&page=${page}`,\n      options\n    )\n      .then(response => response.json())\n      .then(response => {\n        // console.log(response);\n        setMovies(response.results);\n        // setTotalPages(response.total_pages);\n        setIsLoading(false);\n      })\n      .catch(err => console.error(err));\n  }, [page, searchQuery]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (input.trim() === '') {\n      alert('Enter a request');\n      return;\n    }\n    setSearchQuery({ query: input });\n    // setSearchValue(input);\n    setPage(1);\n  };\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  return (\n    <ContainerStyled $marginTop>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <input\n            type=\"text\"\n            name=\"input\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            onChange={handleChange}\n            value={input}\n          />\n          <button type=\"submit\">\n            <span>Search_</span>\n          </button>\n        </label>\n      </form>\n      {isLoading ? (\n        <>Loading...</>\n      ) : (\n        <ContainerStyled>\n          <MoviesList movies={movies} path={location} />\n        </ContainerStyled>\n      )}\n    </ContainerStyled>\n  );\n};\n\nexport default Movies;\n"],"names":["MoviesList","movies","path","map","movie","to","id","state","from","original_title","useState","input","setInput","setMovies","isLoading","setIsLoading","page","setPage","location","useLocation","useSearchParams","searchQuery","setSearchQuery","useEffect","get","fetch","method","headers","accept","Authorization","then","response","json","results","catch","err","console","error","$marginTop","onSubmit","e","preventDefault","trim","query","alert","type","name","autoComplete","autoFocus","placeholder","onChange","target","value"],"sourceRoot":""}